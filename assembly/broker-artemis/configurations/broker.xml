<?xml version='1.0'?>
<!--
    Copyright (c) 2019, 2022 Eurotech and/or its affiliates and others

    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
        Eurotech - initial API and implementation
 -->

<configuration xmlns="urn:activemq"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">

    <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="urn:activemq:core ">
        <name>0.0.0.0</name>
        <persistence-enabled>true</persistence-enabled>
        <!-- this could be ASYNCIO or NIO -->
        <journal-type>NIO</journal-type>
        <paging-directory>./data/kapua/paging</paging-directory>
        <bindings-directory>./data/kapua/bindings</bindings-directory>
        <journal-directory>./data/kapua/journal</journal-directory>
        <large-messages-directory>./data/kapua/large-messages</large-messages-directory>
        <journal-datasync>true</journal-datasync>
        <journal-min-files>2</journal-min-files>
        <journal-pool-files>-1</journal-pool-files>

        <!--
          You can specify the NIC you want to use to verify if the network
           <network-check-NIC>theNickName</network-check-NIC>
          -->

        <!--
          Use this to use an HTTP server to validate the network
           <network-check-URL-list>http://www.apache.org</network-check-URL-list> -->

        <!-- <network-check-period>10000</network-check-period> -->
        <!-- <network-check-timeout>1000</network-check-timeout> -->

        <!-- this is a comma separated list, no spaces, just DNS or IPs
             it should accept IPV6

             Warning: Make sure you understand your network topology as this is meant to validate if your network is valid.
                      Using IPs that could eventually disappear or be partially visible may defeat the purpose.
                      You can use a list of multiple IPs, and if any successful ping will make the server OK to continue running -->
        <!-- <network-check-list>10.0.0.1</network-check-list> -->

        <!-- use this to customize the ping used for ipv4 addresses -->
        <!-- <network-check-ping-command>ping -c 1 -t %d %s</network-check-ping-command> -->

        <!-- use this to customize the ping used for ipv6 addresses -->
        <!-- <network-check-ping6-command>ping6 -c 1 %2$s</network-check-ping6-command> -->

        <!--
         This value was determined through a calculation.
         Your system could perform 22.73 writes per millisecond
         on the current journal configuration.
         That translates as a sync write every 44000 nanoseconds
        -->
        <journal-buffer-timeout>44000</journal-buffer-timeout>

        <!-- how often we are looking for how many bytes are being used on the disk in ms -->
        <disk-scan-period>5000</disk-scan-period>

        <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
             that won't support flow control. -->
        <max-disk-usage>90</max-disk-usage>

        <!-- the system will enter into page mode once you hit this limit.
             This is an estimate in bytes of how much the messages are using in memory

              The system will use half of the available memory (-Xmx) by default for the global-max-size.
              You may specify a different value here if you need to customize it to your needs.

              <global-max-size>100Mb</global-max-size>
        -->

        <!-- Acceptors notes -->
        <!-- useEpoll means: it will use Netty epoll if you are on a system (Linux) that supports it -->
            <!-- amqpCredits: The number of credits sent to AMQP producers -->
            <!-- amqpLowCredits: The server will send the # credits specified at amqpCredits at this low mark -->
        <!-- 
        <acceptors>
            <acceptor name="mqtt">tcp://0.0.0.0:1883?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=MQTT;useEpoll=true</acceptor>
        </acceptors>
        -->
        <!-- allowLinkStealing=true -->

        <!-- disable caching at all, otherwise we'll have issues while managing stealing link:
            the remove connection (ServerPlugin#afterDestroyConnection) is called without calling the authenticate (SecurityPlugin#authenticate).
        TODO do further tests to check the performance impact and try to enable authorization cache only -->
        <authentication-cache-size>0</authentication-cache-size>
        <authorization-cache-size>0</authorization-cache-size>
        <security-invalidation-interval>0</security-invalidation-interval>

        <security-settings>
            <security-setting match="#">
                <permission type="createNonDurableQueue" roles="amq"/>
                <permission type="deleteNonDurableQueue" roles="amq"/>
                <permission type="createDurableQueue" roles="amq"/>
                <permission type="deleteDurableQueue" roles="amq"/>
                <permission type="createAddress" roles="amq"/>
                <permission type="deleteAddress" roles="amq"/>
                <permission type="consume" roles="amq"/>
                <permission type="browse" roles="amq"/>
                <permission type="send" roles="amq"/>
                <!-- we need this otherwise ./artemis data imp wouldn't work -->
                <permission type="manage" roles="amq"/>
            </security-setting>
        </security-settings>

        <address-settings>
            <!--default for catch all-->
            <address-setting match="#">
                <dead-letter-address>$SYS/MSG/dlq/default</dead-letter-address>
                <expiry-address>$SYS/MSG/dlq/expired</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- with -1 only the global-max-size is in use for limiting -->
                <max-size-bytes>-1</max-size-bytes>
                <message-counter-history-day-limit>10</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-create-jms-queues>true</auto-create-jms-queues>
                <auto-create-jms-topics>true</auto-create-jms-topics>
                <default-address-routing-type>ANYCAST</default-address-routing-type>
            </address-setting>
        </address-settings>

        <!-- WARNING
        changing this section will have impact in several part of the application.
        see camel.xml and the subscriptions/filters
        see Acl (org.eclipse.kapua.broker.artemis.plugin.security.context.Acl)
        see transport.jms.topic.separator property
        -->
        <wildcard-addresses>
           <routing-enabled>true</routing-enabled>
           <delimiter>/</delimiter>
           <any-words>#</any-words>
           <single-word>+</single-word>
        </wildcard-addresses>

        <broker-plugins>
            <broker-plugin class-name="org.eclipse.kapua.broker.artemis.plugin.security.ServerPlugin">
                <property key="version" value="1.0" />
            </broker-plugin>
        </broker-plugins>
        <addresses>
            <address name="$SYS/MSG/dlq/default">
                <anycast>
                    <queue name="$SYS/MSG/dlq/default"/>
                </anycast>
            </address>
            <address name="$SYS/MSG/dlq/expired">
                <anycast>
                    <queue name="$SYS/MSG/dlq/expired"/>
                </anycast>
            </address>
        </addresses>

        <!-- Uncomment the following if you want to use the Standard LoggingActiveMQServerPlugin pluging to log in events
        <broker-plugins>
            <broker-plugin class-name="org.apache.activemq.artemis.core.server.plugin.impl.LoggingActiveMQServerPlugin">
                <property key="LOG_ALL_EVENTS" value="true"/>
                <property key="LOG_CONNECTION_EVENTS" value="true"/>
                <property key="LOG_SESSION_EVENTS" value="true"/>
                <property key="LOG_CONSUMER_EVENTS" value="true"/>
                <property key="LOG_DELIVERING_EVENTS" value="true"/>
                <property key="LOG_SENDING_EVENTS" value="true"/>
                <property key="LOG_INTERNAL_EVENTS" value="true"/>
            </broker-plugin>
        </broker-plugins>
        -->

    </core>
</configuration>
