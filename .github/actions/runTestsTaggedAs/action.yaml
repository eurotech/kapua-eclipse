name: 'Execute tests'
description: 'Execute tests suite for tests tagged as specified'
inputs:
  tag:
    description: Cucumber tag of the tests to run
    required: false
  needs-docker-images:
    description: true if this suite needs docker images, false otherwise
    required: false
    default: 'true'
  needs-api-docker-image:
    description: true if this suite needs the rest-api docker image, false otherwise
    required: false
    default: 'false'
  run-junit:
    description: true if you want to execute junit tests, false if you want to execute cucumber tests
    required: false
    default: 'false'
#outputs:
runs:
  using: "composite"
  steps:
    - name: Set up runner
      uses: ./.github/actions/setUpRunner

    - name: Set up Maven caches
      uses: ./.github/actions/setUpMavenCaches

    - name: Docker images creation
      if: ${{ inputs.needs-docker-images == 'true' }}
      run: mvn clean install -pl ${APP_PROJECTS} && mvn clean install -Pdocker -f assembly/pom.xml -pl '!:kapua-assembly-api' #api container not used in the tests at all se we don't need to build it here
      shell: bash

    - name: Docker rest-api image creation
      if: ${{ inputs.needs-api-docker-image == 'true' }}
      run: mvn clean install -Pdocker -pl :kapua-assembly-api
      shell: bash

    - name: Cucumber tests execution step
      if: ${{ inputs.run-junit == 'false' }}
      run: mvn -B -Dgroups='!org.eclipse.kapua.qa.markers.junit.JUnitTests' -Dcucumber.filter.tags="${{ inputs.tag }}" -pl ${TEST_PROJECTS} verify
      shell: bash

    - name: Junit tests execution step
      if: ${{ inputs.run-junit == 'true' }}
      run: mvn -B -Dgroups='org.eclipse.kapua.qa.markers.junit.JUnitTests' verify
      shell: bash

    - name: Code coverage results upload
      uses: codecov/codecov-action@v4
      with:
        root_dir: /home/runner/work/kapua/kapua/